{
  "name": "instagram-realtime",
  "version": "0.0.4",
  "description": "Event-driven, Object-oriented Instagram API Wrapper",
  "main": "libs/InstagramStream.js",
  "dependencies": {
    "connect": "x.x.x",
    "request": "2.x.x"
  },
  "devDependencies": {
    "mocha": "1.x.x",
    "express": "3.x.x",
    "colors": "0.x.x",
    "socket.io": "0.9.x"
  },
  "scripts": {
    "start": "node examples/socket.io.js",
    "example-express": "node examples/express.js",
    "example-http": "node examples/http.js",
    "example-socket.io": "node examples/socket.io.js",
    "test": "mocha -R spec"
  },
  "engines": {
    "node": "0.8.x"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/instagram-realtime/instagram-realtime.git"
  },
  "keywords": [
    "instagram",
    "realtime",
    "event"
  ],
  "author": {
    "name": "Matt Razorblade Hammerstadt",
    "email": "matt@planwork.us"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "readme": "# instagram-realtime\n\nEvent-based, object-oriented Instagram API wrapper for NodeJS\n\nThat is, program instagram-related things, using an event-driven framework.\nNote that this adds middleware, which handles the Instagram API's subscription\nverification.\n\n## Minimal Example\n\n```js\nvar app     = require('express')();\nvar colors  = require('colors');\nvar server  = require('http').createServer(app).listen(process.env.PORT || 5000);\n\nvar InstagramStream = require('instagram-realtime');\nvar secrets = require('./secrets.json');\n\nvar stream = InstagramStream(\n  server,\n  {\n    client_id     : secrets.client_id,\n    client_secret : secrets.client_secret,\n    url           : secrets.url,\n    callback_path : 'callback'\n  }\n);\n\nstream.on('unsubscribe', function (req, resp) {\n  console.log('unsubscribe'.green);\n  stream.subscribe({ tag : 'yolo' });\n});\n\nstream.on('new', function (req, body) {\n  console.log(body);\n});\n\napp.get('/', function (req, resp) {\n  resp.set('Content-Type', 'text/plain; charset=utf-8');\n  resp.end('üçïüèä');\n});\n\nstream.unsubscribe('all');\n```\n\n## Methods\n\nBrief description of functions\n\n### subscribe\n\nSubscribe to a hashtag:\n\n```js\nstream.subscribe({ tag : 'yolo' });\n```\n\nSubscribe to a geographic location:\n\n```js\nstream.subscribe({ lat:35.657872, lng:139.70232', radius:1000 });\n```\n\nSubscribe to a location by ID:\n\n```js\nstream.subscribe({ location : 2345 });\n```\n\nSubscribe to *all* users registered with the app:\n\n```js\nstream.subscribe({ user : true });\n```\n\n### unsubscribe\n\nUnsubscribe from a stream:\n\n```js\nstream.unsubscribe();\n```\n\n### on\n\nRegister a trigger for unsubscription:\n\n```js\nstream.on('unsubscribe', function (response, body) {\n}\nstream.on('unsubscribe/error', function (error, response, body) {\n}\n```\n\nRegister a trigger for subscription:\n\n```js\nstream.on('subscribe', function (response, body) {\n}\nstream.on('subscribe/error', function (error, response, body) {\n}\n```\n\nRegister a trigger for new media:\n```js\nstream.on('new', function (response, body) {\n}\nstream.on('new/error', function (error, response, body) {\n}\n```\n\n## TODO\n\n1. Adjust function callbacks\n2. Update docs\n\n# License\n\nMIT\n\n# Author\n\nMatt Razorblade Hammerstadt [@mattvvhat](https://twitter.com/mattvvhat)\n",
  "bugs": {
    "url": "https://github.com/instagram-realtime/instagram-realtime/issues"
  },
  "homepage": "https://github.com/instagram-realtime/instagram-realtime",
  "_id": "instagram-realtime@0.0.4",
  "dist": {
    "shasum": "1d26e44c73b4bca9c29fcab712b52a4663258861"
  },
  "_from": "instagram-realtime@",
  "_resolved": "https://registry.npmjs.org/instagram-realtime/-/instagram-realtime-0.0.4.tgz"
}
